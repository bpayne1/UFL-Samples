'---------------------------------------------------------------------------
' Define all of the fields that will be parsed from the incoming data

[FIELD]
' The timestamp of the incoming data
Field(1).NAME = "Timestamp"
Field(1).TYPE = "DateTime"
Field(1).FORMAT = "M/d/yyyy h:m:s"

' The unique name of the device that is sending this data
Field(2).NAME = "deviceid"

' Define fields for all of the other data items from the imp
Field(3).NAME = "softwareversion"
Field(3).TYPE = "String"
Field(4).NAME = "bootromversion"
Field(4).TYPE = "String"
Field(5).NAME = "environment"
Field(5).TYPE = "String"
Field(6).NAME = "ssid"
Field(6).TYPE = "String"
Field(7).NAME = "macaddress"
Field(7).TYPE = "String"
Field(8).NAME = "rssi"
Field(8).TYPE = "Number"
Field(9).NAME = "powersave"
Field(9).TYPE = "String"
Field(10).NAME = "memoryfree"
Field(10).TYPE = "Number"
Field(11).NAME = "lightlevel"
Field(11).TYPE = "Number"
Field(12).NAME = "voltage"
Field(12).TYPE = "Number"
Field(13).NAME = "pin1"
Field(13).TYPE = "Number"
Field(14).NAME = "pin2"
Field(14).TYPE = "Number"
Field(15).NAME = "pin5"
Field(15).TYPE = "Number"
Field(16).NAME = "pin7"
Field(16).TYPE = "Number"
Field(17).NAME = "pin8"
Field(17).TYPE = "Number"
Field(18).NAME = "pin9"
Field(18).TYPE = "Number"

' A collection of all of the PI AF attributes that will be added to this PI AF Element template
FIELD(19).Name = "AttributesCollection"
FIELD(19).Type = "Collection"

' The name of the PI AF Element template to use when creating new elements
FIELD(20).Name = "PIAFElementTemplateName"

' A collection of static AF Attributes, containing fixed metadata for this asset
Field(21).NAME = "StaticAttributesCollection"
Field(21).TYPE = "Collection"

'---------------------------------------------------------------------------
' "MSG" (message) defines a pass through the incoming data, and in each pass,
' different fields (listed above) are extracted.
' After each message, actions may be taken, such as storing values in the PI System. 
' In this case, data is received as a CSV string.

[MSG]
MSG(1).NAME = "CSVData"

[CSVData]
CSVData.FILTER = C1=="ElectricImpData,*"
' Note that all valid messages from an Imp will start with the above prefix; 
' Now that the filter has been applied, start extracting the field values from the CSV line of data
Timestamp = 		["*,(*),*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*"]
deviceid = 			["*,*,(*),*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*"]
softwareversion = 	["*,*,*,(*),*,*,*,*,*,*,*,*,*,*,*,*,*,*,*"]
bootromversion = 	["*,*,*,*,(*),*,*,*,*,*,*,*,*,*,*,*,*,*,*"]
environment = 		["*,*,*,*,*,(*),*,*,*,*,*,*,*,*,*,*,*,*,*"]
ssid = 				["*,*,*,*,*,*,(*),*,*,*,*,*,*,*,*,*,*,*,*"]
macaddress = 		["*,*,*,*,*,*,*,(*),*,*,*,*,*,*,*,*,*,*,*"]
rssi = 				["*,*,*,*,*,*,*,*,(*),*,*,*,*,*,*,*,*,*,*"]
powersave = 		["*,*,*,*,*,*,*,*,*,(*),*,*,*,*,*,*,*,*,*"]
memoryfree = 		["*,*,*,*,*,*,*,*,*,*,(*),*,*,*,*,*,*,*,*"]
lightlevel = 		["*,*,*,*,*,*,*,*,*,*,*,(*),*,*,*,*,*,*,*"]
voltage = 			["*,*,*,*,*,*,*,*,*,*,*,*,(*),*,*,*,*,*,*"]
pin1 = 				["*,*,*,*,*,*,*,*,*,*,*,*,*,(*),*,*,*,*,*"]
pin2 = 				["*,*,*,*,*,*,*,*,*,*,*,*,*,*,(*),*,*,*,*"]
pin5 = 				["*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,(*),*,*,*"]
pin7 = 				["*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,(*),*,*"]
pin8 = 				["*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,(*),*"]
pin9 = 				["*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,(*)"]

' First, give the new AF Element Template a name
PIAFElementTemplateName = "Electric Imp Element Template"

' Create a PI Point called DeviceName + "_" + <Field Name>, map it to a PI AF Attribute with a properly formatted name, and 
' write a new data event with the timestamp equal to Timestamp field and the value equal to Field value
StoreEvent(deviceid + "_" + "deviceid", "Device ID", Timestamp, deviceid)
StoreEvent(deviceid + "_" + "softwareversion", "Software Version", Timestamp, softwareversion)
StoreEvent(deviceid + "_" + "bootromversion", "Boot ROM Version", Timestamp, bootromversion)
StoreEvent(deviceid + "_" + "environment", "Environment", Timestamp, environment)
StoreEvent(deviceid + "_" + "ssid", "Network SSID", Timestamp, ssid)
StoreEvent(deviceid + "_" + "macaddress", "MAC Address", Timestamp, macaddress)
StoreEvent(deviceid + "_" + "rssi", "Wi-Fi RSSI", Timestamp, rssi)
StoreEvent(deviceid + "_" + "powersave", "Power Save Enabled", Timestamp, powersave)
StoreEvent(deviceid + "_" + "memoryfree", "Memory Free", Timestamp, memoryfree)
StoreEvent(deviceid + "_" + "lightlevel", "Light Sensor Reading", Timestamp, lightlevel)
StoreEvent(deviceid + "_" + "voltage", "Hardware Voltage", Timestamp, voltage)
StoreEvent(deviceid + "_" + "pin1", "Analog Input 1 Reading", Timestamp, pin1)
StoreEvent(deviceid + "_" + "pin2", "Analog Input 2 Reading", Timestamp, pin2)
StoreEvent(deviceid + "_" + "pin5", "Analog Input 5 Reading", Timestamp, pin5)
StoreEvent(deviceid + "_" + "pin7", "Analog Input 7 Reading", Timestamp, pin7)
StoreEvent(deviceid + "_" + "pin8", "Analog Input 8 Reading", Timestamp, pin8)
StoreEvent(deviceid + "_" + "pin9", "Analog Input 9 Reading", Timestamp, pin9)

' Having created PI Points, associated them with PI AF Attributes, and written the sensor data, add those PI Points 
' (which now have associated Attribute names) to an Attribute collection 
' that belongs to (or will be used to create) a PI AF Element template
AttributesCollection = Add(deviceid + "_" + "deviceid")
AttributesCollection = Add(deviceid + "_" + "softwareversion")
AttributesCollection = Add(deviceid + "_" + "bootromversion")
AttributesCollection = Add(deviceid + "_" + "environment")
AttributesCollection = Add(deviceid + "_" + "ssid")
AttributesCollection = Add(deviceid + "_" + "macaddress")
AttributesCollection = Add(deviceid + "_" + "rssi")
AttributesCollection = Add(deviceid + "_" + "powersave")
AttributesCollection = Add(deviceid + "_" + "memoryfree")
AttributesCollection = Add(deviceid + "_" + "lightlevel")
AttributesCollection = Add(deviceid + "_" + "voltage")
AttributesCollection = Add(deviceid + "_" + "pin1")
AttributesCollection = Add(deviceid + "_" + "pin2")
AttributesCollection = Add(deviceid + "_" + "pin5")
AttributesCollection = Add(deviceid + "_" + "pin7")
AttributesCollection = Add(deviceid + "_" + "pin8")
AttributesCollection = Add(deviceid + "_" + "pin9")

' Add the static attributes to their collection, and set their values; these will appear as static AF attributes on the new element
StaticAttributesCollection = Clear()
StaticAttributesCollection = Add( "Device Type", "Electric Imp" )
StaticAttributesCollection = Add( "Data Ingress Method", "UFL" )
StaticAttributesCollection = Add( "Location", "IoT Test Lab" )

' Create a parent element beneath which the new element will be made
StoreElement("Electric Imps")

' Create a new PI AF Element, with a name equal to the DeviceName field, using (or creating) the PI AF Element Template
' with the name specified above, which has within it the PI AF Attributes collection populated earlier
StoreElement("Electric Imps" + CHAR(92) + deviceid, PIAFElementTemplateName, AttributesCollection, StaticAttributesCollection)