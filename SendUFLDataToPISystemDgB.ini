'---------------------------------------------------------------------------
' Define all of the fields that will be parsed from the incoming data

[FIELD]
' The timestamp of the incoming data
Field(1).NAME = "Timestamp"
Field(1).TYPE = "DateTime"
Field(1).FORMAT = "yyyy-MM-ddThh:mm:ssZ"

' The unique name of the device that is sending this data
Field(2).NAME = "deviceid"

' Define fields for all of the other data items from the imp
Field(3).NAME = "MachineType"
Field(3).TYPE = "String"
Field(4).NAME = "PlatformType"
Field(4).TYPE = "String"
'Field(5).NAME = "ProcessorType"
Field(6).NAME = "CPUUsage"
Field(6).TYPE = "Number"
Field(7).NAME = "DiskBusyTime"
Field(7).TYPE = "Number"
Field(8).NAME = "MemoryUsed"
Field(8).TYPE = "Number"
Field(9).NAME = "TotalMemory"
Field(9).TYPE = "Number"
Field(10).NAME = "WiFiBitsReceived"
Field(10).TYPE = "Number"
Field(11).NAME = "WiFiBitsSent"
Field(11).TYPE = "Number"
Field(12).NAME = "Latitude"
Field(12).TYPE = "Number"
Field(13).NAME = "Longitude"
Field(13).TYPE = "Number"

' A collection of all of the PI AF attributes that will be added to this PI AF Element template
FIELD(14).Name = "AttributesCollection"
FIELD(14).Type = "Collection"

' The name of the PI AF Element template to use when creating new elements
FIELD(15).Name = "PIAFElementTemplateName"

' A collection of static AF Attributes, containing fixed metadata for this asset
Field(16).NAME = "StaticAttributesCollection"
Field(16).TYPE = "Collection"

'---------------------------------------------------------------------------
' "MSG" (message) defines a pass through the incoming data, and in each pass,
' different fields (listed above) are extracted.
' After each message, actions may be taken, such as storing values in the PI System. 
' In this case, data is received as a CSV string.

[MSG]
MSG(1).NAME = "CSVData"

[CSVData]
CSVData.FILTER = C1=="DragonBoardData,*"
' Note that all valid messages from an Imp will start with the above prefix; 
' Now that the filter has been applied, start extracting the field values from the CSV line of data
Timestamp = 		["*,(*),*,*,*,*,*,*,*,*,*,*,*,*"]
deviceid = 			["*,*,(*),*,*,*,*,*,*,*,*,*,*,*"]
MachineType = 		["*,*,*,(*),*,*,*,*,*,*,*,*,*,*"]
PlatformType = 		["*,*,*,*,(*),*,*,*,*,*,*,*,*,*"]
'ProcessorType = 	["*,*,*,*,*,(*),*,*,*,*,*,*,*,*"]
CPUUsage = 			["*,*,*,*,*,*,(*),*,*,*,*,*,*,*"]
DiskBusyTime = 		["*,*,*,*,*,*,*,(*),*,*,*,*,*,*"]
MemoryUsed = 		["*,*,*,*,*,*,*,*,(*),*,*,*,*,*"]
TotalMemory = 		["*,*,*,*,*,*,*,*,*,(*),*,*,*,*"]
WiFiBitsReceived = 	["*,*,*,*,*,*,*,*,*,*,(*),*,*,*"]
WiFiBitsSent = 		["*,*,*,*,*,*,*,*,*,*,*,(*),*,*"]
Latitude = 		["*,*,*,*,*,*,*,*,*,*,*,*,(*),*"]
Longitude = 		["*,*,*,*,*,*,*,*,*,*,*,*,*,(*)"]


' First, give the new AF Element Template a name
PIAFElementTemplateName = "Dragonboard Element Template"

' Create a PI Point called DeviceName + "_" + <Field Name>, map it to a PI AF Attribute with a properly formatted name, and 
' write a new data event with the timestamp equal to Timestamp field and the value equal to Field value
StoreEvent(deviceid + "_" + "MachineType", "Machine Type", Timestamp, MachineType)
StoreEvent(deviceid + "_" + "PlatformType", "Platform Type", Timestamp, PlatformType)
'StoreEvent(deviceid + "_" + "ProcessorType", "Processor Type", Timestamp, ProcessorType)
StoreEvent(deviceid + "_" + "CPUUsage", "CPU Usage", Timestamp, CPUUsage)
StoreEvent(deviceid + "_" + "DiskBusyTime", "Disk Busy Time", Timestamp, DiskBusyTime)
StoreEvent(deviceid + "_" + "MemoryUsed", "Memory Used", Timestamp, MemoryUsed)
StoreEvent(deviceid + "_" + "TotalMemory", "Total Memory", Timestamp, TotalMemory)
StoreEvent(deviceid + "_" + "WiFiBitsReceived", "Wi-Fi Bits Received", Timestamp, WiFiBitsReceived)
StoreEvent(deviceid + "_" + "WiFiBitsSent", "Wi-Fi Bits Sent", Timestamp, WiFiBitsSent)
StoreEvent(deviceid + "_" + "Latitude", "Latitude", Timestamp, Latitude)
StoreEvent(deviceid + "_" + "Longitude", "Longitude", Timestamp, Longitude)

' Having created PI Points, associated them with PI AF Attributes, and written the sensor data, add those PI Points 
' (which now have associated Attribute names) to an Attribute collection 
' that belongs to (or will be used to create) a PI AF Element template
AttributesCollection = Add(deviceid + "_" + "MachineType")
AttributesCollection = Add(deviceid + "_" + "PlatformType")
'AttributesCollection = Add(deviceid + "_" + "ProcessorType")
AttributesCollection = Add(deviceid + "_" + "CPUUsage")
AttributesCollection = Add(deviceid + "_" + "DiskBusyTime")
AttributesCollection = Add(deviceid + "_" + "MemoryUsed")
AttributesCollection = Add(deviceid + "_" + "TotalMemory")
AttributesCollection = Add(deviceid + "_" + "WiFiBitsReceived")
AttributesCollection = Add(deviceid + "_" + "WiFiBitsSent")
AttributesCollection = Add(deviceid + "_" + "Latitude")
AttributesCollection = Add(deviceid + "_" + "Longitude")

' Add the static attributes to their collection, and set their values; these will appear as static AF attributes on the new element
StaticAttributesCollection = Clear()
StaticAttributesCollection = Add( "Device Type", "Qualcomm DragonBoard" )
StaticAttributesCollection = Add( "Data Ingress Method", "UFL" )

' Create a parent element beneath which the new element will be made
StoreElement("DragonBoards")

' Create a new PI AF Element, with a name equal to the DeviceName field, using (or creating) the PI AF Element Template
' with the name specified above, which has within it the PI AF Attributes collection populated earlier
StoreElement("DragonBoards" + CHAR(92) + deviceid, PIAFElementTemplateName, AttributesCollection, StaticAttributesCollection)